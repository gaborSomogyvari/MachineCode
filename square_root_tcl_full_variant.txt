IN R0 				#STORE INPUT (A=R0)
SET R10 100000000 	#SET THE STARTING VALUE TO HUNDRED MILLION (B=R10)
SET R24 10
SET R15 1		

#---LOOP TO SPLIT INTO DIGITS AND STORE IN THE STACK---
MOD R0 R10 R11 		#C =A MOD B (C=R11)
SUB R0 R11 R12 		#D =A-C		(D=R12)
DIV R12 R10 R13		#E =D/B		(E=R13)
PUSH R13	   		#STORE IN STACK
MOV R11 R0	   		#A=C
DIV R10 R24 R10 	#B=B/10
JMPEQ 15 R10 R15	#IF B=1 WE EXIT THE LOOP
JMP 6		   		#LOOP BACK

PUSH R11			#STORE THE LAST VALUE TO THE STACK

#---SETTING ALL THE NEEDED DIGIT VALUES TO VARIABLES FROM THE STACK---
POP R1
POP R2
POP R3
POP R4
POP R5
POP R6
POP R7
POP R8
POP R9

SET R10 0
SET R11 0
SET R12 0
SET R13 0
SET R14 0

SET R22 2 #STORE 2
SET R23 0 #STORE THE OVERFLOW
SET R25 0 #STORE THE JUMP BACK POSITION
SET R26 156#_STORE THE BEGINNING OF PART 3

#---CALCULATING THE INDIVIDUAL DIGITS--- part 2
#DIGIT 1 
MUL R1 R1 R14
MOV IAR R25
JMP R26	

#DIGIT 2
MUL R1 R2 R10
MOV IAR R25
JMP R26

#DIGIT 3
MUL R1 R3 R10
MUL R2 R2 R14
MOV IAR R25
JMP R26

#DIGIT 4
MUL R1 R4 R10
MUL R2 R3 R11
MOV IAR R25
JMP R26

#DIGIT 5
MUL R1 R5 R10
MUL R2 R4 R11
MUL R3 R3 R14
MOV IAR R25
JMP R26

#DIGIT 6
MUL R1 R6 R10
MUL R2 R5 R11
MUL R3 R4 R12
MOV IAR R25
JMP R26

#DIGIT 7
MUL R1 R7 R10
MUL R2 R6 R11
MUL R3 R5 R12
MUL R4 R4 R14
MOV IAR R25
JMP R26

#DIGIT 8
MUL R1 R8 R10
MUL R2 R7 R11
MUL R3 R6 R12
MUL R4 R5 R13
MOV IAR R25
JMP R26

#DIGIT 9
MUL R1 R9 R10
MUL R2 R8 R11
MUL R3 R7 R12
MUL R4 R6 R13
MUL R5 R5 R14
MOV IAR R25
JMP R26

#DIGIT 10
MUL R2 R9 R11
MUL R3 R8 R12
MUL R4 R7 R13
MUL R5 R6 R10
MOV IAR R25
JMP R26

#DIGIT 11
MUL R3 R9 R12
MUL R4 R8 R13
MUL R5 R7 R11
MUL R6 R6 R14
MOV IAR R25
JMP R26

#DIGIT 12
MUL R4 R9 R13
MUL R5 R8 R12
MUL R6 R7 R11
MOV IAR R25
JMP R26

#DIGIT 13
MUL R5 R9 R12
MUL R6 R8 R11
MUL R7 R7 R14
MOV IAR R25
JMP R26

#DIGIT 14
MUL R6 R9 R11
MUL R7 R8 R12
MOV IAR R25
JMP R26

#DIGIT 15
MUL R7 R9 R12
MUL R8 R8 R14
MOV IAR R25
JMP R26

#DIGIT 16
MUL R8 R9 R12
MOV IAR R25
JMP R26

#DIGIT 17
MUL R9 R9 R14
MOV IAR R25
JMP R26

JMP 188 #_JUMP TO PART 4

#----ADDING THE VALUES TOGETHER----- part 3
MUL R10 R22 R10 #R10=R10*2
MUL R11 R22 R11 #R11=R11*2
MUL R12 R22 R12 #R12=R12*2
MUL R13 R22 R13 #R13=R13*2

ADD R10 R11 R10 #R10=R10+R11
ADD R12 R13 R12 #R12=R12+R13
ADD R14 R23 R14 #R14=R14+OVERFLOW
ADD R10 R12 R10 #R10=(R10+R11)+(R12+R13)
ADD R10 R14 R10 #R10=(R10+R11)+(R12+R13)+(R14+OVERFLOW)

#----CALCULATING OVERFLOW----
MOD R10 R24 R11 #R11= THE LEFTOVER FROM THE MOD IS THE NUMBER WE WILL PRINT
SUB R10 R11 R10 #R10= THE NUMBER WE WILL GIVE TO THE NEXT CIRCULATION
JMPLT 174 R10 R22 #_IF THE OVERFLOW IS 0 THEN DO NOT DIVIDE IT BY 10 (JUMP OVER THE DIVISION)
DIV R10 R24 R10	#DIVIDE THE OVERFLOW BY 10

#---PRINT AND RESET ALL THE VALUES---
PUSH R11    #PUSH THE DIGIT WE WANT TO PRINT AT THE END
MOV R10 R23 #SET THE OVERFLOW FOR R23
SET R10 0	#RESET TO DEFAULT VALUES
SET R11 0
SET R12 0
SET R13 0
SET R14 0


#----RETURN TO WHERE WE CAME FROM+2----
INC R25 2 
JMP R25

#----PRINT WHAT WE HAVE ON THE STACK----part 4
SET R11 17

POP R10
OUT R10
INC R15 1
JMPLE 190 R15 R11 #WE HAVE MAXIMUM 17 DIGITS, AND WE STOP THE LOOP AT THE LAST DIGIT

NOP